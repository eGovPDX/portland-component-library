.usa-select {
  height: var(--dropdown-height, 40px);
  min-height: var(--dropdown-height, 40px); 
  padding-top: var(--dropdown-padding-y, 8px);
  padding-bottom: var(--dropdown-padding-y, 8px);
  padding-left: var(--dropdown-padding-x, 8px);

  /* Default State - Border & Background */
  border-radius: var(--dropdown-border-radius, 0px);
  border: var(--dropdown-border, 1px solid #1B1B1B);
  background-color: var(--dropdown-bg, #FFF);

  /* Default State - Text */
  color: var(--dropdown-color, #1B1B1B);
  font-family: var(--dropdown-font-family, "Public Sans");
  font-size: var(--dropdown-font-size, 16px);
  font-style: var(--dropdown-font-style, normal);
  font-weight: var(--dropdown-font-weight, 400);
  line-height: var(--dropdown-line-height, normal); /* Figma specified, USWDS might have its own */
}

/* Focus State */
.usa-select:focus {
  /* Override USWDS default focus (which uses outline/box-shadow) */
  outline: none; 
  box-shadow: none; 
  border-radius: var(--dropdown-border-radius, 0px); /* Keep consistent radius */
  border: var(--dropdown-focus-border, 4px solid #2491FF);
}

/* Disabled State */
.usa-select:disabled,
.usa-select[disabled] {
  /* Figma: border: 1px solid var(--theme-color-ink, #1B1B1B); 
     USWDS default disabled border is lighter. */
  border: var(--dropdown-disabled-border, 1px solid #1B1B1B);
  background-color: var(--dropdown-disabled-bg, #757575);

  /* Figma: color: var(--theme-color-ink, #1B1B1B); 
     USWDS default disabled text color is #757575.
     Overriding to --theme-color-ink as per Figma.
     Ensure sufficient contrast with the disabled background. */
  color: var(--dropdown-disabled-color, #1B1B1B);
  /* USWDS also styles the ::after pseudo-element (arrow) for disabled state,
     e.g., opacity. This will persist unless specifically overridden. */
}

/* Error State */
.usa-select.usa-input--error {
  border-radius: var(--dropdown-border-radius, 0px); /* Keep consistent radius */
  /* Figma: border: var(----usa-spacing-05, 4px) solid var(----theme-color-error-dark, #B50909);
     USWDS usa-input--error is typically 2px border. Overriding to 4px. */
  border: var(--dropdown-error-border, 0.25rem solid #B50909);
  background-color: var(--dropdown-error-bg, #FFF); /* Usually white, as per Figma */

  /* Text color inside the select field for error state */
  color: var(--dropdown-error-color, #B50909); /* Figma wants this, USWDS doesn't do this for select text by default */
}

/* Error State Focus */
.usa-select.usa-input--error:focus {
  outline: none;
  box-shadow: none;
  border-radius: var(--dropdown-border-radius, 0px);
  border: var(--dropdown-focus-border, 4px solid #2491FF);
}

/* Optional: Specific width class for the component wrapper, if needed from Figma example */
/* Apply this class to the div wrapping the label and select in Dropdown.jsx if fixed width is desired */
.dropdown-wrapper--fixed-width {
  width: 343px;
}

/* Styles for custom chevron implementation */
.dropdown__wrapper {
  position: relative;
}

.dropdown__wrapper .usa-select {
  background-image: none !important;
  padding-right: var(--dropdown-select-padding-right, 3rem);
}

.dropdown__custom-chevron {
  position: absolute;
  top: 50%;
  right: var(--dropdown-chevron-right, 1rem);
  transform: var(--dropdown-chevron-transform, translateY(-50%));
  pointer-events: none;
  color: var(--dropdown-chevron-color, #1B1B1B);
  transition: var(--dropdown-chevron-transition, transform 0.2s ease-in-out);
}

.dropdown__custom-chevron--open {
  transform: var(--dropdown-chevron-open-transform, translateY(-50%) rotate(180deg));
}

/* Ensure icon color changes for disabled and error states if needed */
.dropdown__wrapper .usa-select:disabled + .dropdown__custom-chevron {
  /* USWDS makes the default arrow less opaque for disabled. 
     Matching the text color for disabled as per earlier Figma derived styles for text. */
  color: var(--dropdown-disabled-color, #1B1B1B);
}

.dropdown__wrapper .usa-select.usa-input--error + .dropdown__custom-chevron {
  color: var(--dropdown-error-color, #B50909); /* Match error text color */
}

/* Optional: If .dropdown-wrapper--fixed-width is used on dropdown__container */
.dropdown__container.dropdown-wrapper--fixed-width .dropdown__wrapper,
.dropdown__container.dropdown-wrapper--fixed-width .usa-select {
    /* Ensure select within the fixed-width wrapper behaves as expected
       (e.g. takes full width of its direct parent if that's the fixed width container) */
    width: 100%; 
}

/* Container for the entire component including label, button, and menu */
.dropdown__container {
  position: relative; /* For absolute positioning of the menu */
  /* If using .dropdown-wrapper--fixed-width from before, ensure it targets .dropdown__container */
}

/* The button that acts as the select input */
.usa-input.dropdown__button {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%; 
  text-align: left;
  height: var(--spacing-7, 40px); 
  min-height: var(--spacing-7, 40px);
  padding-top: var(--spacing-1, 8px);
  padding-bottom: var(--spacing-1, 8px);
  padding-left: var(--spacing-1, 8px);
  padding-right: var(--spacing-7, 40px); 
  position: relative; 
  cursor: pointer;
  text-indent: 0;
}

/* Disabled State - ensuring specificity */
.usa-input.dropdown__button:disabled, 
.usa-input.dropdown__button.usa-input--disabled {
  cursor: not-allowed;
  /* Visuals like background/border for disabled are expected from .usa-input--disabled */
}

/* Selected Value Text - ensure specificity for error color */
.usa-input.dropdown__button.usa-input--error .dropdown__selected-value {
  color: var(--dropdown-error-color, #B50909);
}
/* Default color for selected value is already in .dropdown__selected-value */


/* Custom Chevron - ensure specificity for error and disabled states */
.usa-input.dropdown__button.usa-input--error .dropdown__custom-chevron {
  color: var(--dropdown-error-color, #B50909);
}

.usa-input.dropdown__button:disabled .dropdown__custom-chevron,
.usa-input.dropdown__button.usa-input--disabled .dropdown__custom-chevron {
  /* Matching the disabled text color of the button, which should come from .usa-input--disabled or a general disabled style */
  /* If .usa-input--disabled text is light, this might need to be a specific muted color for the icon */
  color: var(--dropdown-disabled-color, #1B1B1B); /* Defaulting to ink, assuming disabled state maintains readability */
  /* opacity: 0.7; /* Alternative for muted look */
}
/* Default color for chevron is in .dropdown__custom-chevron */

/* Style for the text part of the button (Base Style) */
.dropdown__selected-value {
  flex-grow: 1; 
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  color: var(--dropdown-color, #1B1B1B);
  font-family: var(--dropdown-font-family, "Public Sans");
  font-size: var(--dropdown-font-size, 16px);
}

/* Custom Chevron Icon inside the button (Base Style) */
.dropdown__custom-chevron {
  position: absolute;
  top: 50%;
  right: var(--spacing-2, 1rem); 
  transform: translateY(-50%);
  transition: transform 0.2s ease-in-out;
  color: var(--dropdown-chevron-color, #1B1B1B);
}

.dropdown__custom-chevron--open {
  transform: translateY(-50%) rotate(180deg);
}

/* Dropdown Menu (ul) */
.dropdown__menu {
  width: fit-content;
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background-color: var(--dropdown-menu-bg, #FFF);
  border: var(--dropdown-menu-border, 1px solid #dfe1e2);
  border-radius: var(--dropdown-menu-border-radius, 0px);
  box-shadow: var(--dropdown-menu-shadow, 0 4px 8px rgba(0,0,0,0.1));
  list-style: none;
  margin: 0;
  padding: var(--spacing-1, 8px) 0;
  overflow-y: auto;
  z-index: 1000; /* Ensure it's above other content */
}

/* Dropdown Menu Item (li) */
.dropdown__item {
  padding: var(--spacing-1, 8px) var(--spacing-2, 16px);
  cursor: pointer;
  color: var(--dropdown-item-color, #1B1B1B);
  background: var(--dropdown-item-bg, transparent);
  font-family: var(--usa-font-family-ui, "Public Sans");
  font-size: var(--theme-font-size-ui-sm, 16px);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.dropdown__item:hover, 
.dropdown__item:focus {
  background: var(--dropdown-item-hover-bg, #dfe1e2);
  color: var(--theme-color-primary-darker, #004c6c);
  outline: none;
}

.dropdown__item--selected {
  background: var(--dropdown-item-selected-bg, #dfe1e2);
  color: var(--dropdown-item-selected-color, #1B1B1B);
  font-weight: bold;
}
